package GreedyAlgo;
import java.util.*;

class Pair {
    int start;
    int end;
    Pair(int start, int end) {
        this.start = start;
        this.end = end;
    }
}

public class test {
    public static void ActivitySelection(Pair p[], int n) {
        Arrays.sort(p, (a, b) -> a.end - b.end);
        ArrayList<Pair> ans = new ArrayList<>();
        int count = 1;
        ans.add(p[0]);
        int last = p[0].end;
        for(int i=1; i<n; i++) {
            if(p[i].start >= last) {
                count++;
                last = p[i].end;
                ans.add(p[i]);
            }
        }
        System.out.println(count);
        for(Pair x : ans) {
            System.out.println(x.start + " " + x.end);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Pair p[] = new Pair[n];
        for(int i=0; i<n; i++) {
            int start = sc.nextInt();
            int end = sc.nextInt();
            p[i] = new Pair(start, end);
        }
        ActivitySelection(p, n);
        sc.close();
    }
}
